-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParElement.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pElement -> Element                         (0)
	%start_pListElement -> ListElement                 (1)
	CIdent -> L_CIdent                                 (2)
	TeX -> L_TeX                                       (3)
	Weird -> L_Weird                                   (4)
	Subscript -> L_Subscript                           (5)
	Element -> CIdent                                  (6)
	Element -> TeX                                     (7)
	Element -> Weird                                   (8)
	Element -> Subscript                               (9)
	ListElement ->                                     (10)
	ListElement -> ListElement Element                 (11)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	L_CIdent       { PT _ (T_CIdent $$) }
	L_TeX          { PT _ (T_TeX $$) }
	L_Weird        { PT _ (T_Weird $$) }
	L_Subscript    { PT _ (T_Subscript $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pElement rule  0
	%start_pListElement rule  1
	CIdent          rule  2
	TeX             rule  3
	Weird           rule  4
	Subscript       rule  5
	Element         rules 6, 7, 8, 9
	ListElement     rules 10, 11

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	L_CIdent       shift, and enter state 3
	L_TeX          shift, and enter state 10
	L_Weird        shift, and enter state 11
	L_Subscript    shift, and enter state 12

	CIdent         goto state 5
	TeX            goto state 6
	Weird          goto state 7
	Subscript      goto state 8
	Element        goto state 9

State 1


	L_CIdent       reduce using rule 10
	L_TeX          reduce using rule 10
	L_Weird        reduce using rule 10
	L_Subscript    reduce using rule 10
	%eof           reduce using rule 10

	ListElement    goto state 4

State 2


	L_CIdent       shift, and enter state 3


State 3

	CIdent -> L_CIdent .                                (rule 2)

	L_CIdent       reduce using rule 2
	L_TeX          reduce using rule 2
	L_Weird        reduce using rule 2
	L_Subscript    reduce using rule 2
	%eof           reduce using rule 2


State 4

	%start_pListElement -> ListElement .                (rule 1)
	ListElement -> ListElement . Element                (rule 11)

	L_CIdent       shift, and enter state 3
	L_TeX          shift, and enter state 10
	L_Weird        shift, and enter state 11
	L_Subscript    shift, and enter state 12
	%eof           accept

	CIdent         goto state 5
	TeX            goto state 6
	Weird          goto state 7
	Subscript      goto state 8
	Element        goto state 13

State 5

	Element -> CIdent .                                 (rule 6)

	L_CIdent       reduce using rule 6
	L_TeX          reduce using rule 6
	L_Weird        reduce using rule 6
	L_Subscript    reduce using rule 6
	%eof           reduce using rule 6


State 6

	Element -> TeX .                                    (rule 7)

	L_CIdent       reduce using rule 7
	L_TeX          reduce using rule 7
	L_Weird        reduce using rule 7
	L_Subscript    reduce using rule 7
	%eof           reduce using rule 7


State 7

	Element -> Weird .                                  (rule 8)

	L_CIdent       reduce using rule 8
	L_TeX          reduce using rule 8
	L_Weird        reduce using rule 8
	L_Subscript    reduce using rule 8
	%eof           reduce using rule 8


State 8

	Element -> Subscript .                              (rule 9)

	L_CIdent       reduce using rule 9
	L_TeX          reduce using rule 9
	L_Weird        reduce using rule 9
	L_Subscript    reduce using rule 9
	%eof           reduce using rule 9


State 9

	%start_pElement -> Element .                        (rule 0)

	%eof           accept


State 10

	TeX -> L_TeX .                                      (rule 3)

	L_CIdent       reduce using rule 3
	L_TeX          reduce using rule 3
	L_Weird        reduce using rule 3
	L_Subscript    reduce using rule 3
	%eof           reduce using rule 3


State 11

	Weird -> L_Weird .                                  (rule 4)

	L_CIdent       reduce using rule 4
	L_TeX          reduce using rule 4
	L_Weird        reduce using rule 4
	L_Subscript    reduce using rule 4
	%eof           reduce using rule 4


State 12

	Subscript -> L_Subscript .                          (rule 5)

	L_CIdent       reduce using rule 5
	L_TeX          reduce using rule 5
	L_Weird        reduce using rule 5
	L_Subscript    reduce using rule 5
	%eof           reduce using rule 5


State 13

	ListElement -> ListElement Element .                (rule 11)

	L_CIdent       reduce using rule 11
	L_TeX          reduce using rule 11
	L_Weird        reduce using rule 11
	L_Subscript    reduce using rule 11
	%eof           reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 12
Number of terminals: 4
Number of non-terminals: 8
Number of states: 14
